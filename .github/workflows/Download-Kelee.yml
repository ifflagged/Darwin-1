name: Download Some Plugins

on:
  schedule:
    - cron: '0,30 * * * *'  # 每小时的第 0 分钟和第 30 分钟执行
  workflow_dispatch:

permissions:
  contents: write

jobs:
  downloading:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Checkout private repository
      uses: actions/checkout@v3
      with:
        repository: "${{ github.actor }}/ShalalaLala"
        token: ${{ secrets.PERSONAL_TOKENS }}
        path: ShalalaLala

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('ShalalaLala/Scripts/kelee-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip install -r ShalalaLala/Scripts/kelee-requirements.txt

    - name: Run download script
      run: python ShalalaLala/Scripts/kelee-20250807.py

    - name: List downloaded files
      run: |
        if [ -d Plugin ]; then
          ls -R Plugin
        else
          echo "⚠️ 目录不存在"
        fi

    - name: Rename and move .lpx files
      run: |
        mkdir -p Modules/Loon/Kelee/Official
        find Plugin -name '*.lpx' | while read file; do
          base=$(basename "$file" .lpx)
          cp "$file" "Modules/Loon/Kelee/Official/$base.plugin"
        done

    - name: Process plugin files and replace JS URLs using Python
      continue-on-error: true
      run: |
        js_base_url="https://github.com/${GITHUB_REPOSITORY}/raw/main/Modules/JS"
        script_path="ShalalaLala/Scripts/kelee_extract_and_replace.py"

        for plugin_file in Modules/Loon/Kelee/Official/*.plugin; do
          echo "Processing $plugin_file"

          author=$(echo "$plugin_file" | awk -F'/' '{print $(NF-2)}')
          module_folder=$(basename "$plugin_file" .plugin)
          echo "From author: $author | Module folder: $module_folder"

          # 提取所有 JS/JSON/JQ 链接
          js_links=$(grep -v '#' "$plugin_file" | grep -oP 'https?://[^ ]+\.(json|js|jq)' || echo "")

          for js_link in $js_links; do
            js_filename=$(basename "$js_link")
            local_js_path="Modules/JS/$author/$module_folder/$js_filename"
            github_js_url="$js_base_url/$author/$module_folder/$js_filename"

            # 创建目录
            mkdir -p "$(dirname "$local_js_path")"

            # 使用 Python 脚本下载
            echo "Running Python script to download: $js_link"
            if python3 "$script_path" "$js_link" "$local_js_path"; then
              echo "✅ Downloaded via Python: $js_link"
              echo "Replacing $js_link with $github_js_url in $plugin_file"
              sed -i "s|$js_link|$github_js_url|g" "$plugin_file"

              Copied_plugin_file="Modules/Loon/Kelee/$module_folder.plugin"
              if [ -f "$Copied_plugin_file" ]; then
                echo "Replacing $js_link with $github_js_url in $Copied_plugin_file"
                sed -i "s|$js_link|$github_js_url|g" "$Copied_plugin_file"
              fi
            else
              echo "❌ Failed to download with Python: $js_link"
            fi
          done
        done

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        DATE="$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
    
        git add Modules/*
    
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          COMMIT_MESSAGE="Converted files at $DATE (UTC+8)"
          git stash
          git pull --rebase
          git stash pop
          git add Modules/*
          git commit -m "$COMMIT_MESSAGE"
          git push
        fi
