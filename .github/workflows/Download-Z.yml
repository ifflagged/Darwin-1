name: Download sgmodule files

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  download-sgmodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up variables
        run: |
          mkdir -p Modules/Surge/zirawell/Official
          API_URL="https://api.github.com/repos/zirawell/R-Store/contents/Rule/Surge/Adblock/App"
          AUTH_HEADER=""
          if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
            AUTH_HEADER="-H \"Authorization: token ${{ secrets.GITHUB_TOKEN }}\""
          fi
          echo "API_URL=$API_URL" >> $GITHUB_ENV
          echo "AUTH_HEADER=$AUTH_HEADER" >> $GITHUB_ENV

      - name: Fetch file list recursively
        run: |
          fetch_files() {
            local url="$1"
            echo "Fetching: $url"
            response=$(curl -s $AUTH_HEADER "$url")
            for row in $(echo "$response" | jq -r '.[] | @base64'); do
              _jq() { echo "${row}" | base64 --decode | jq -r "${1}"; }
              type=$(_jq '.type')
              path=$(_jq '.path')
              if [ "$type" == "file" ] && [[ "$path" == *.sgmodule ]]; then
                echo "$path" >> all_files.txt
              elif [ "$type" == "dir" ]; then
                fetch_files "https://api.github.com/repos/zirawell/R-Store/contents/$path"
              fi
            done
          }
          rm -f all_files.txt
          fetch_files "$API_URL"

      - name: Count duplicate filenames
        run: |
          declare -A counts
          while read -r file_path; do
            filename=$(basename "$file_path")
            counts["$filename"]=$(( ${counts["$filename"]} + 1 ))
          done < all_files.txt
          for name in "${!counts[@]}"; do
            echo "$name ${counts[$name]}"
          done > name_counts.txt

      - name: Download files with retry and handle duplicates
        run: |
          declare -A name_count
          while read -r name count; do
            name_count["$name"]=$count
          done < name_counts.txt

          while read -r file_path; do
            filename=$(basename "$file_path")
            category=$(echo "$file_path" | cut -d'/' -f3) # åŠŸèƒ½åˆ†ç±»

            if [ ${name_count["$filename"]} -gt 1 ]; then
              new_filename="${category}-${filename}"
            else
              new_filename="$filename"
            fi

            dest="Modules/Surge/zirawell/Official/$new_filename"
            echo "ðŸ“¥ Downloading $file_path as $new_filename"

            url="https://raw.githubusercontent.com/zirawell/R-Store/main/$file_path"
            success=false
            for attempt in 1 2 3; do
              echo "Attempt $attempt for $file_path"
              if curl -sSL "$url" -o "$dest"; then
                success=true
                break
              else
                echo "Download attempt $attempt failed for $file_path"
                sleep 2
              fi
            done
            if [ "$success" = false ]; then
              echo "Warning: Download failed for $file_path after 3 attempts, skipping."
            fi
          done < all_files.txt

      - name: Commit and push changes
        run: |
          DATE="$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
          
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add Modules/Surge/zirawell/Official
          if git diff --cached --quiet; then
            echo "âœ… No changes to commit."
          else
            git commit -m "Download Surge Modules at $DATE (UTC+8)"
            git push
          fi
